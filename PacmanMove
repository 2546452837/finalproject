using UnityEngine;
using System.Collections;

public class PacmanMove : MonoBehaviour {

	public float speed = 0.4f;

	Vector2 dest = Vector2.zero;


	void Start () {

         dest=transform.position;

	}

	void FixedUpdate () {


		//通過Rigidbody2D，實現Pacman的移動
		Vector2 p = Vector2.MoveTowards(transform.position, dest, speed);

		GetComponent<Rigidbody2D>().MovePosition(p);

		//收及輸入訊息，通過Valid方法，計算移動距離
		if (Input.GetKey (KeyCode.UpArrow)) 
		{

			dest=Valid (Vector2.up,dest);
		}

		if (Input.GetKey (KeyCode.RightArrow)) 
		{

			dest=Valid (Vector2.right,dest);
		}
			

		if (Input.GetKey (KeyCode.DownArrow)) 
		{

			dest=Valid (-Vector2.up,dest);
		}

		if (Input.GetKey (KeyCode.LeftArrow)) 
		{

			dest=Valid (-Vector2.right,dest);
		}


		//判斷執行動畫
		Vector2 dir = dest - (Vector2)transform.position;

		GetComponent<Animator> ().SetFloat ("DirX",dir.x);

		GetComponent<Animator> ().SetFloat ("DirY",dir.y);
			
	}
	//該方法用來判斷角色是否可以在該方向上移動，同時計算移動距離
	Vector2 Valid(Vector2 dir,Vector2 dest)
	{

		//通過射線檢測判斷是否可以通過，移動時可能會有一定誤差，所以用Vector2.Scale(dir,new Vector2(0.1f,0.1f))進行了一定誤差處理）

		Vector2 pos =transform.position;

        RaycastHit2D hit = Physics2D.Linecast(pos + dir + Vector2.Scale(dir, new Vector2(0.1f, 0.1f)), pos);


		//通過相應判斷進行移動計算
		if(hit.collider==GetComponent<Collider2D>())
		{

			if((Vector2)transform.position == dest)
			{
				
				dest = (Vector2)transform.position + dir;

			}

		}

		return dest;
	}
		
}
